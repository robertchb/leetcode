/**
 * Note: The returned array must be malloced, assume caller calls free().
 */

char *letterMap[10] = {
	 " ",    //0
     "",     //1
     "abc",  //2
     "def",  //3
     "ghi",  //4
     "jkl",  //5
     "mno",  //6
     "pqrs", //7
     "tuv",  //8
     "wxyz"  //9
};
char glArr[10240];
int letterLength[10] = {0,0,3,3,3,3,3,4,3,4};
int glNumber = 0;//用来标志在第glNumber行插入字符串
viod findCombination(char* digits, int index, char** res)
{
	if(index == strlen(digits)) {
		res[glNumber] = (int*)malloc(sizeof(int) * index);
		memcpy(res[glNumber],glArr,sizeof(int) * index);
		glNumber++;
		return;
	}
	for(int i = 0;i < strlen(digits); i++) {
		findCombination(digits, index + 1, strcat(glArr))
	}
}

char ** letterCombinations(char * digits, int* returnSize)
{
	int len = 1;
	for(int i = 0; i < strlen(digits); i++) {
		len *= letterLength[digits[i]];
	}
	*returnSize = len;
    char** res = (char**)malloc(sizeof(char*) * len);
	findCombination(digits, 0, res);
}